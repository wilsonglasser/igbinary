# Runs igbinary's tests and verifies that the package can be built.

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # See https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#using-environment-variables-in-a-matrix
    strategy:
      fail-fast: false
      matrix:
       include:
         - PHP_VERSION: '8.2'
           PHP_VERSION_FULL: 8.2.10

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Build and test in docker
        run: bash ci/test_dockerized.sh ${{ matrix.PHP_VERSION }} ${{ matrix.DOCKER_ARCHITECTURE }}

      # We reuse the php base image because
      # 1. It has any necessary dependencies installed for php 7.0-8.2
      # 2. It is already downloaded
      #
      # We need to install valgrind then rebuild php from source with the configure option '--with-valgrind' to avoid valgrind false positives
      # because php-src has inline assembly that causes false positives in valgrind when that option isn't used.
      # The OS release in the PHP 7.0 image is too old to install valgrind without workarounds: https://stackoverflow.com/questions/76094428/debian-stretch-repositories-404-not-found
      - name: Build and test in docker again with valgrind
        run: if [[ ${{ matrix.PHP_VERSION }} != '7.0' ]]; then bash ci/test_dockerized_valgrind.sh ${{ matrix.PHP_VERSION }} ${{ matrix.PHP_VERSION_FULL }} ${{ matrix.DOCKER_ARCHITECTURE }}; fi
      # NOTE: tests report false positives for zend_string_equals in php 7.3+
      # due to the use of inline assembly in php-src. (not related to igbinary)
